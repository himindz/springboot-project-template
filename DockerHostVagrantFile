# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'yaml'
require 'rbconfig'
require 'io/console'
settings = YAML.load_file 'vagrant.yml'

dr_server = settings['docker']['server']
dr_port = settings['docker']['port']
dr_user = settings['docker']['user']
dr_password= settings['docker']['password']

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/trusty64"
  config.vm.define settings['microservice']['name']

  config.vm.provider :virtualbox do |vb|
    vb.name = settings['microservice']['name']
    vb.memory = "3072"
    vb.customize ["modifyvm", :id, "--cpus", "2"]
    vb.customize ["modifyvm", :id, "--graphicscontroller", "vboxvga"]
    vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
    vb.customize ["modifyvm", :id, "--ioapic", "on"]
    vb.customize ["modifyvm", :id, "--vram", "128"]
    vb.customize ["modifyvm", :id, "--hwvirtex", "on"]
    vb.gui = true
  end

  config.vm.provision :shell, inline: "sudo apt-get update"
  config.vm.provision :shell, inline: "sudo apt-get install -y nfs-common nfs-kernel-server apt-transport-https ca-certificates dos2unix"
  config.vm.provision :shell, inline: "sudo  curl -s -L https://github.com/docker/compose/releases/download/1.7.1/docker-compose-`uname -s`-`uname -m` > docker-compose"
  config.vm.provision :shell, inline: "sudo  mv docker-compose /usr/local/bin/docker-compose"
  config.vm.provision :shell, inline: "sudo  chmod +x /usr/local/bin/docker-compose"
  config.vm.provision :docker
  config.vm.provision :shell, inline: "sudo mkdir -p /etc/docker/certs.d/#{dr_server}:#{dr_port}"
  config.vm.provision :shell, inline: "sudo openssl s_client -showcerts -connect #{dr_server}:#{dr_port} </dev/null 2>/dev/null|openssl x509 -outform PEM >localregistry.crt;sudo mv localregistry.crt /etc/docker/certs.d/#{dr_server}:#{dr_port}/localregistry.crt"
  config.vm.provision :shell, inline: "docker login --username=#{dr_user} --password=#{dr_password} #{dr_server}:#{dr_port}"
  config.vm.provision :shell, inline: "docker pull #{dr_server}:#{dr_port}/devimage"
  config.vm.provision :shell, inline: "docker pull #{dr_server}:#{dr_port}/qaimage"
  config.vm.provision :shell, inline: "docker tag  #{dr_server}:#{dr_port}/qaimage qaimage"
  config.vm.provision :shell, inline: "docker tag  #{dr_server}:#{dr_port}/devimage devimage"

  config.vm.provision :shell, inline: "sudo cp /vagrant/docker/docker /etc/default/docker"
  config.vm.provision :shell, inline: "sudo dos2unix /etc/default/docker"
  config.vm.provision :shell, inline: "sudo service docker restart"
  config.vm.provision :shell, inline: "sudo docker volume create --name maven-home"

  config.vm.provision "shell", inline:
     "ps aux | grep 'sshd:' | awk '{print $2}' | xargs kill"


 config.vm.network "forwarded_port",
     guest: 22, host: settings['vm_ssh_port']
 config.vm.network "forwarded_port",
     guest: settings['local_jenkins_port'], host: settings['local_jenkins_port']
 config.vm.network "forwarded_port",
    guest: settings['dev_image_ssh_port'], host: settings['dev_image_ssh_port']
end
